{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "entera number15\n",
      "second largest number is 5\n",
      "second smallest factor is 3\n",
      "sum of factors is: 24\n",
      "avg of factors: 6\n"
     ]
    }
   ],
   "source": [
    "## WAP to find second largest factor of given number\n",
    "def numoffactors(n):\n",
    "    for i in range(1,n+1):\n",
    "        if n%i==0:\n",
    "            #print(i,end=',')\n",
    "            f.append(i)\n",
    "    return  f      \n",
    "            \n",
    "f=[]      \n",
    "n=int(input('entera number'))\n",
    "rs=numoffactors(n)\n",
    "print('second largest number is',rs[-2])\n",
    "print('second smallest factor is' ,rs[1])\n",
    "print('sum of factors is:',sum(rs))\n",
    "print('avg of factors:',sum(rs)//len(rs))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n",
      "count of prime number 25\n",
      "sum of primes 1060\n",
      "largest number in prime 97\n",
      "largest number in prime 97\n",
      "largest number in prime 2\n"
     ]
    }
   ],
   "source": [
    "## WAP to find largest and smallest prime number b/w 1 to 100\n",
    "def prime(n):\n",
    "    if n==1:\n",
    "        return False;\n",
    "    for i in range(2,n):\n",
    "        if n%i==0:\n",
    "            return False\n",
    "    return True\n",
    "p=[]\n",
    "for j in range(1,101):\n",
    "    rs=prime(j)\n",
    "    if rs:\n",
    "        #print(j,end=',')\n",
    "        p.append(j)\n",
    "print(p) \n",
    "print('count of prime number',len(p))\n",
    "print('sum of primes',sum(p))\n",
    "print('largest number in prime',p[-1])\n",
    "print('largest number in prime',max(p))\n",
    "print('largest number in prime',min(p))\n",
    "\n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
